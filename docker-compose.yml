version: "3.9"

services:
  raft-node-1:
    build: .
    image: raft-go:latest
    container_name: raft-node-1
    hostname: raft-node-1
    command: ["/app/raft-go", "-id=1"]
    environment:
      - NODE_ID=1
    networks:
      raft-network:
        aliases:
          - raft-node-1.raft-cluster.local
    ports:
      - "8080:8080"
      - "1234:1234"
    volumes:
      - raft-node-1-data:/app/data
      - ./dc-config.yml:/app/config.yml

  raft-node-2:
    build: .
    image: raft-go:latest
    container_name: raft-node-2
    hostname: raft-node-2
    command: ["/app/raft-go", "-id=2"]
    environment:
      - NODE_ID=2
    networks:
      raft-network:
        aliases:
          - raft-node-2.raft-cluster.local
    ports:
      - "8081:8080"
      - "1235:1234"
    volumes:
      - raft-node-2-data:/app/data
      - ./dc-config.yml:/app/config.yml

  raft-node-3:
    build: .
    image: raft-go:latest
    container_name: raft-node-3
    hostname: raft-node-3
    command: ["/app/raft-go", "-id=3"]
    environment:
      - NODE_ID=3
    networks:
      raft-network:
        aliases:
          - raft-node-3.raft-cluster.local
    ports:
      - "8082:8080"
      - "1236:1234"
    volumes:
      - raft-node-3-data:/app/data
      - ./dc-config.yml:/app/config.yml

  # prometheus:
  #   image: prom/prometheus:latest
  #   volumes:
  #     - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Mount the config file
  #   ports:
  #     - "9090:9090"  # Expose Prometheus port
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   networks:
  #     raft-network:
  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  memcached:
    image: memcached:1.6.29
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m  # Set the maximum memory usage
      - MEMCACHED_THREADS=4       # Number of threads to use
    networks:
      raft-network:

  init:
    image: &tempoImage grafana/tempo:2.6.0
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    # volumes:
      # - tempo-data:/var/tempo

  tempo:
    image: *tempoImage
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./tempo.yml:/etc/tempo.yml
      # - tempo-data:/var/tempo
    ports:
      - "14268:14268"  # jaeger ingest
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin
    networks:
      raft-network:
    depends_on:
      - init
      - memcached

  loki:
    image: grafana/loki:3.2.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yaml
    volumes:
      - ./loki.yaml:/etc/loki/loki.yaml
    networks:
      raft-network:

  # promtail:
  #   image: grafana/promtail:latest
  #   volumes:
  #     - ./promtail.yaml:/etc/promtail/config.yml
  #     - /var/log:/var/log
  #     - /var/lib/docker/containers:/var/lib/docker/containers
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   command: -config.file=/etc/promtail/config.yml
  #   networks:
  #     raft-network:


  grafana:
    image: grafana/grafana:11.0.0
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor traceQLStreaming metricsSummary
    ports:
      - "3000:3000"
    networks:
      raft-network:
    depends_on:
      - tempo
      - loki
    links:
      - loki
      - tempo

networks:
  raft-network:
    driver: bridge

volumes:
  raft-node-1-data:
  raft-node-2-data:
  raft-node-3-data:
  tempo-data:
